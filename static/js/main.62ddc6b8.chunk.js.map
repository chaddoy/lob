{"version":3,"sources":["components/Card/index.tsx","components/PageLayout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CardWrapper","children","className","Card","status","label","value","flipped","onSelect","onFlipped","states","default","selected","itemClass","onClick","LETTERS","Array","from","toUpperCase","PageLayout","React","useState","oneKey","setOneKey","letters","setLetters","orders","setOrders","flips","setFlips","showConfirm","setShowConfirm","is1M","setIs1M","fullOrders","length","oneLetter","handleReset","localStorage","removeItem","handlePrizeChange","splice","useEffect","key","parseInt","getItem","map","letter","index","some","flip","twoLeft","keys","_key","isSelected","item","Math","floor","random","setItem","toString","filter","includes","_letter","type","checked","onChange","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62ddc6b8.chunk.js","sourcesContent":["import React from 'react'\n\ninterface ICard {\n  className?: string\n  status: 'default' | 'selected'\n  label: string\n  value?: number\n  flipped?: boolean\n  onSelect?: () => void\n  onFlipped?: () => void\n}\n\nexport const CardWrapper: React.FC = ({ children }) => (\n  <div className=\"relative rounded-xl max-h-max w-24 h-32 font-semibold text-7xl ml-2 mr-2\">{children}</div>\n)\n\nconst Card: React.FC<ICard> = ({\n  className = '',\n  status = 'default',\n  label,\n  value,\n  flipped,\n  onSelect = () => {},\n  onFlipped = () => {},\n}) => {\n  const states = {\n    default: 'text-gray-500 bg-gray-50 border-gray-300 hover:bg-gray-300 hover:border-gray-500 cursor-help',\n    selected:\n      'text-red-400 bg-yellow-50 border-yellow-300 hover:text-red-500 hover:bg-yellow-100 hover:border-yellow-400 cursor-pointer',\n    flipped: 'text-red-600 bg-yellow-200 border-yellow-500',\n  }\n  const stateClass = flipped ? states.flipped : states[status]\n  const itemClass = `absolute max-h-max w-24 h-32 rounded-xl flex items-center justify-center h-full border-2 ${stateClass} ${className}`\n\n  return (\n    <div\n      className={`lob-card relative rounded-xl shadow-md max-h-max w-24 h-32 font-semibold text-7xl ${\n        flipped ? 'is-flipped' : ''\n      }`}\n    >\n      <div\n        className={`lob-card__face lob-card__face--front ${itemClass}`}\n        onClick={() => {\n          onSelect()\n          !flipped && onFlipped()\n        }}\n      >\n        {label}\n      </div>\n\n      <div className={`lob-card__face lob-card__face--back ${itemClass}`} onClick={onSelect}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card, { CardWrapper } from '../Card'\n\nconst LETTERS = Array.from('abcdefg'.toUpperCase())\n\nconst PageLayout: React.FC = () => {\n  const [oneKey, setOneKey] = React.useState<number | null>(null)\n  const [letters, setLetters] = React.useState<string[]>(LETTERS)\n  const [orders, setOrders] = React.useState<string[]>([])\n  const [flips, setFlips] = React.useState<string[]>([])\n  const [showConfirm, setShowConfirm] = React.useState<string | null>(null)\n  const [is1M, setIs1M] = React.useState(true)\n  const fullOrders = orders.length === letters.length\n  const oneLetter = oneKey !== null ? letters[oneKey] : null\n\n  const handleReset = () => {\n    localStorage.removeItem('lob_1key')\n    setOrders([])\n    setFlips([])\n    setShowConfirm(null)\n    setOneKey(null)\n  }\n\n  const handlePrizeChange = (value: boolean) => {\n    if (oneKey === null) {\n      setIs1M(value)\n      setLetters([...LETTERS].splice(0, value ? 7 : 4))\n    }\n  }\n\n  React.useEffect(() => {\n    const key = parseInt(localStorage.getItem('lob_1key') || '-1', 10)\n    setOneKey(key >= 0 ? key : null)\n  }, [])\n\n  React.useEffect(() => {\n    const key = parseInt(localStorage.getItem('lob_1key') || '-1', 10)\n    setOneKey(key >= 0 ? key : null)\n  }, [is1M])\n\n  return (\n    <div className=\"flex h-screen\">\n      <div className=\"w-8/12 flex flex-column items-center justify-center\">\n        {oneKey !== null ? (\n          <>\n            <div className=\"flex flex-row max-h-max\">\n              {orders.map((letter, index) => (\n                <CardWrapper key={index}>\n                  <Card\n                    key={index}\n                    label={letter}\n                    value={letter === oneLetter ? 1 : 0}\n                    status={fullOrders ? 'selected' : 'default'}\n                    flipped={flips.some((flip) => flip === letter)}\n                    onFlipped={() => {\n                      const twoLeft = flips.length === letters.length - 2\n\n                      if (orders[0] !== letter && fullOrders && !twoLeft) {\n                        setFlips([...flips, letter])\n                      }\n\n                      if (twoLeft) {\n                        setShowConfirm(letter)\n                      }\n\n                      if (flips.length >= letters.length - 1) {\n                        setFlips([...flips, letter])\n                      }\n                    }}\n                  />\n                </CardWrapper>\n              ))}\n\n              {Array.from(Array(letters.length - orders.length).keys()).map((_key, index) => (\n                <CardWrapper key={index}>\n                  <Card key={index} label=\"?\" value={0} status=\"default\" />\n                </CardWrapper>\n              ))}\n            </div>\n\n            {!!showConfirm && (\n              <>\n                <div className=\"py-4\"></div>\n                <div className=\"flex items-center justify-center\">\n                  <button\n                    className=\"bg-blue-600 px-4 py-2 border-2 border-blue-600 rounded text-white max-w-max\"\n                    onClick={() => {\n                      setFlips([...flips, showConfirm])\n                      setShowConfirm(null)\n                    }}\n                  >\n                    REVEAL\n                  </button>\n                </div>\n              </>\n            )}\n\n            {!fullOrders && (\n              <>\n                <div className=\"py-4\"></div>\n                <div className=\"flex flex-row max-h-max\">\n                  {letters.map((letter, index) => {\n                    const isSelected = orders.some((item) => item === letter)\n\n                    return (\n                      <CardWrapper key={index}>\n                        {!isSelected && (\n                          <Card\n                            label={letter}\n                            status=\"selected\"\n                            onSelect={() => {\n                              setOrders([...orders, letter])\n                            }}\n                          />\n                        )}\n                      </CardWrapper>\n                    )\n                  })}\n                </div>\n              </>\n            )}\n          </>\n        ) : (\n          <div className=\"flex items-center justify-center\">\n            <button\n              className=\"bg-blue-600 px-4 py-2 border-2 border-blue-600 rounded text-white max-w-max\"\n              onClick={() => {\n                handleReset()\n                const key = Math.floor(Math.random() * letters.length)\n                localStorage.setItem('lob_1key', key.toString())\n                setOneKey(key)\n              }}\n            >\n              START\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"w-4/12 border-l-2 flex justify-center items-center\">\n        <div className=\"w-full flex flex-column justify-center items-center py-6\">\n          <div className=\"text-3xl\">Controls</div>\n          <br />\n\n          <div className=\"flex\">\n            {orders.map((letter, index) => (\n              <div\n                key={index}\n                className={`rounded-xl shadow-md max-h-max w-12 h-12 text-red-600 text-2xl font-semibold bg-yellow-100 border-2 border-yellow-400 ml-1 mr-1 flex items-center justify-center ${\n                  letter === oneLetter ? 'bg-yellow-300' : ''\n                }`}\n              >\n                {letter === oneLetter ? 1 : 0}\n              </div>\n            ))}\n            {letters\n              .filter((letter) => !orders.includes(letter))\n              .map((_letter, index) => (\n                <div\n                  key={index}\n                  className={`rounded-xl shadow-md max-h-max w-12 h-12 border-2 ml-1 mr-1 flex items-center justify-center text-gray-500 bg-gray-50 border-gray-300 font-bold hover:bg-gray-300 hover:border-gray-500 cursor-help`}\n                >\n                  ?\n                </div>\n              ))}\n          </div>\n\n          <br />\n\n          <div className=\"cursor-pointer font-semibold text-lg flex\">\n            <div\n              className={`ml-4 mr-4 cursor-pointer w-18 text-center ${oneKey !== null ? 'text-gray-400' : ''}`}\n              onClick={() => handlePrizeChange(false)}\n            >\n              <input\n                type=\"radio\"\n                className=\"ml-1 mr-1 mr-2\"\n                checked={!is1M}\n                onChange={() => handlePrizeChange(false)}\n                disabled={oneKey !== null}\n              />\n              1K\n            </div>\n            <div\n              className={`ml-4 mr-4 cursor-pointer w-18 text-center ${oneKey !== null ? 'text-gray-400' : ''}`}\n              onClick={() => handlePrizeChange(true)}\n            >\n              <input\n                type=\"radio\"\n                className=\"ml-1 mr-1 mr-2\"\n                checked={is1M}\n                onChange={() => handlePrizeChange(true)}\n                disabled={oneKey !== null}\n              />\n              1M\n            </div>\n          </div>\n\n          <br />\n\n          <button\n            className=\"bg-blue-600 px-4 py-2 border-2 border-blue-600 rounded text-white\"\n            onClick={() => handleReset()}\n          >\n            RESET\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PageLayout\n","import React from \"react\";\nimport PageLayout from \"./components/PageLayout\";\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <PageLayout />\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}